{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","value","setValue","className","src","alt","InputProps","endAdornment","InputAdornment","position","onChange","newValue","decimalCharacter","thousandCharacter","decimalPlaces","decimalPlacesShownOnBlur","showArrow","step","label","ReactDOM","render","fallback","document","getElementById"],"mappings":"mPAKaA,G,MAAM,WAAO,IAAD,EACGC,mBAA6B,IADhC,mBAChBC,EADgB,KACTC,EADS,KAEvB,OACE,yBAAKC,UAAU,OACb,yBAAKC,IAAI,4CAA4CD,UAAU,OAAOE,IAAI,mBAC1E,yBAAKF,UAAU,aACb,+CAAsC,qBAAVF,EAAwB,YAAcA,IAEpE,yBAAKE,UAAU,aACb,yBAAKA,UAAU,QAAf,yCACA,kBAAC,IAAD,CACEA,UAAU,cACVF,MAAOA,EACPK,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,SAAU,SAACC,GAAD,OAAcT,EAASS,OAGrC,yBAAKR,UAAU,aACb,yBAAKA,UAAU,QAAf,wDACA,kBAAC,IAAD,CACEA,UAAU,cACVF,MAAOA,EACPW,iBAAiB,IACjBC,kBAAkB,IAClBP,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,SAAU,SAACC,GAAD,OAAcT,EAASS,OAGrC,yBAAKR,UAAU,aACb,yBAAKA,UAAU,QAAf,qCACA,kBAAC,IAAD,CACEA,UAAU,cACVF,MAAOA,EACPa,cAAe,EACfR,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,SAAU,SAACC,GAAD,OAAcT,EAASS,OAGrC,yBAAKR,UAAU,aACb,yBAAKA,UAAU,QAAf,6CACA,kBAAC,IAAD,CACEA,UAAU,cACVF,MAAOA,EACPa,cAAe,EACfC,yBAA0B,EAC1BT,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,SAAU,SAACC,GAAD,OAAcT,EAASS,OAGrC,yBAAKR,UAAU,aACb,yBAAKA,UAAU,QAAf,6CACA,kBAAC,IAAD,CACEA,UAAU,cACVF,MAAOA,EACPe,WAAS,EACTV,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,SAAUR,KAGd,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QAAf,yBACA,kBAAC,IAAD,CACEA,UAAU,cACVF,MAAOA,EACPe,WAAW,EACXC,KAAM,GACNX,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBC,SAAUR,KAGd,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QAAf,qBACA,kBAAC,IAAD,CACEe,MAAO,YACPf,UAAU,cACVF,MAAOA,EACPe,WAAW,EACXC,KAAM,IACNX,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,WAEhBC,SAAUR,QC9FpBiB,IAASC,OACP,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.96bfc000.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { InputAdornment } from '@material-ui/core';\nimport { NumberField } from '@milkscout/material-ui';\nimport './style.css';\n\nexport const App = () => {\n  const [value, setValue] = useState<number | undefined>(12);\n  return (\n    <div className=\"App\">\n      <img src=\"https://assets.milkscout.eu/logo/logo.svg\" className=\"Logo\" alt=\"logo milkscout\" />\n      <div className=\"Container\">\n        <div>Current value: {typeof value === 'undefined' ? 'undefined' : value}</div>\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">Default NumberField with end adroment</div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField different decimal and thousand character</div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          decimalCharacter=\",\"\n          thousandCharacter=\".\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField with 6 decimal places</div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          decimalPlaces={6}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField with 3 decimal places on blur</div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          decimalPlaces={6}\n          decimalPlacesShownOnBlur={3}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField with showArrow only (desktop)</div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          showArrow\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField step 0.1 </div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          showArrow={true}\n          step={0.1}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField label</div>\n        <NumberField\n          label={'MilkScout'}\n          className=\"Numberfield\"\n          value={value}\n          showArrow={true}\n          step={100}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">â‚¬</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Suspense fallback={null}>\n    <App />\n  </Suspense>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}