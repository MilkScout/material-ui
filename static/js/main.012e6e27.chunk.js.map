{"version":3,"sources":["App.tsx","index.tsx"],"names":["render","App","useState","value","setValue","useEffect","className","src","alt","InputProps","endAdornment","InputAdornment","position","decimalCharacter","thousandCharacter","onChange","newValue","showArrow","step","label","readOnly","disabled","ReactDOM","fallback","document","getElementById"],"mappings":"mPAIIA,G,MAAS,GAEAC,EAAM,WAAO,IAAD,EACGC,mBAA6B,YADhC,mBAChBC,EADgB,KACTC,EADS,KAKvB,OAHAC,qBAAU,WACRL,GAAkB,KAGlB,yBAAKM,UAAU,OACb,yBAAKC,IAAI,4CAA4CD,UAAU,OAAOE,IAAI,mBAC1E,yBAAKF,UAAU,aACb,+CAAsC,qBAAVH,EAAwB,YAAcA,IAEpE,yBAAKG,UAAU,aACb,+CAAqBN,IAEvB,yBAAKM,UAAU,aACb,yBAAKA,UAAU,QAAf,sBACA,kBAAC,IAAD,CACEA,UAAU,cACVG,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,UAIpB,yBAAKN,UAAU,aACb,yBAAKA,UAAU,QAAf,wDACA,kBAAC,IAAD,CACEA,UAAU,cACVH,MAAOA,EACPU,iBAAiB,IACjBC,kBAAkB,IAClBL,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBG,SAAU,SAACC,GAAD,OAAcZ,EAASY,OAGrC,yBAAKV,UAAU,aACb,yBAAKA,UAAU,QAAf,6CACA,kBAAC,IAAD,CACEA,UAAU,cACVH,MAAOA,EACPc,WAAS,EACTR,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBG,SAAUX,KAGd,yBAAKE,UAAU,aACb,yBAAKA,UAAU,QAAf,yBACA,kBAAC,IAAD,CACEA,UAAU,cACVH,MAAOA,EACPc,WAAW,EACXC,KAAM,GACNT,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,OAEhBG,SAAUX,KAGd,yBAAKE,UAAU,aACb,yBAAKA,UAAU,QAAf,qBACA,kBAAC,IAAD,CACEa,MAAO,YACPb,UAAU,cACVH,MAAOA,EACPc,WAAW,EACXC,KAAM,IACNT,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,WAEhBG,SAAUX,KAGd,yBAAKE,UAAU,aACb,yBAAKA,UAAU,QAAf,YACA,kBAAC,IAAD,CACEa,MAAO,YACPb,UAAU,cACVH,MAAOA,EACPc,WAAW,EACXC,KAAM,IACNT,WAAY,CACVW,UAAU,EACVV,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,WAEhBG,SAAUX,KAGd,yBAAKE,UAAU,aACb,yBAAKA,UAAU,QAAf,YACA,kBAAC,IAAD,CACEa,MAAO,YACPb,UAAU,cACVH,MAAOA,EACPc,WAAW,EACXC,KAAM,IACNG,UAAU,EACVZ,WAAY,CACVC,aAAc,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OAAzB,WAEhBG,SAAUX,OCxGpBkB,IAAStB,OACP,kBAAC,WAAD,CAAUuB,SAAU,MAClB,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.012e6e27.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { InputAdornment } from '@material-ui/core';\nimport { NumberField } from '@milkscout/material-ui';\nimport './style.css';\nlet render = 0;\n\nexport const App = () => {\n  const [value, setValue] = useState<number | undefined>(1234567.89);\n  useEffect(() => {\n    render = render + 1;\n  });\n  return (\n    <div className=\"App\">\n      <img src=\"https://assets.milkscout.eu/logo/logo.svg\" className=\"Logo\" alt=\"logo milkscout\" />\n      <div className=\"Container\">\n        <div>Current value: {typeof value === 'undefined' ? 'undefined' : value}</div>\n      </div>\n      <div className=\"Container\">\n        <div>Render amount: {render}</div>\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">Uncontrolled value</div>\n        <NumberField\n          className=\"Numberfield\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField different decimal and thousand character</div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          decimalCharacter=\",\"\n          thousandCharacter=\".\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField with showArrow only (desktop)</div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          showArrow\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField step 0.1 </div>\n        <NumberField\n          className=\"Numberfield\"\n          value={value}\n          showArrow={true}\n          step={0.1}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">NumberField label</div>\n        <NumberField\n          label={'MilkScout'}\n          className=\"Numberfield\"\n          value={value}\n          showArrow={true}\n          step={100}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">Readonly</div>\n        <NumberField\n          label={'MilkScout'}\n          className=\"Numberfield\"\n          value={value}\n          showArrow={true}\n          step={100}\n          InputProps={{\n            readOnly: true,\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"Container\">\n        <div className=\"Text\">Disabled</div>\n        <NumberField\n          label={'MilkScout'}\n          className=\"Numberfield\"\n          value={value}\n          showArrow={true}\n          step={100}\n          disabled={true}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\n          }}\n          onChange={setValue}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Suspense fallback={null}>\n    <App />\n  </Suspense>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}